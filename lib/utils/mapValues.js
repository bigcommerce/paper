/**
 * Clone of https://lodash.com/docs/3.10.1#mapValues
 *
 * Creates an object with the same keys as `object` and values generated by
 * running each own enumerable property of `object` through `iteratee`. The
 * iteratee function is invoked with three arguments: (value, key, object).
 *
 * @param {Object} object - The object to iterate over.
 * @param {Function} iteratee - The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @example
 *
 * mapValues({ 'a': 1, 'b': 2 }, n => n * 3);
 * // => { 'a': 3, 'b': 6 }
 */
function mapValues(object, iteratee) {
    return Object.entries(object).reduce((resObj, [key, value]) => {
        resObj[key] = iteratee(value, key, object);
        return resObj;
    }, {});
}

module.exports = mapValues;
